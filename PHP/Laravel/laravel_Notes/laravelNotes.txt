Getting Started On macOS
If you're developing on a Mac and Docker Desktop is already installed, you can use a simple terminal command to create a new Laravel project. For example, to create a new Laravel application in a directory named "example-app", you may run the following command in your terminal:
curl -s "https://laravel.build/example-app" | bash
Of course, you can change "example-app" in this URL to anything you like - just make sure the application name only contains alpha-numeric characters, dashes, and underscores. The Laravel application's directory will be created within the directory you execute the command from.
After the project has been created, you can navigate to the application directory and start Laravel Sail. Laravel Sail provides a simple command-line interface for interacting with Laravel's default Docker configuration:
cd example-app
Â 
./vendor/bin/sail up
The first time you run the Sail up command, Sail's application containers will be built on your local machine. This could take several minutes. Don't worry, subsequent attempts to start Sail will be much faster.
Once the application's Docker containers have been started, you can access the application in your web browser at: http://localhost

1). cd ~/Sites
2)laravel new ada


think of valet as packaging a web server for you on your own machine instead of a remote hosting company
think of laravel as someone else built a full enterprise application for you to use to bootstrap your own website
valet was an easy way to package Nginx, Php, DnsMasq, etc.. for you
dnsmasq is why you can use ada.test/ in your browser, it routes .test domains to your localhost
you will mostly never use those again, only during initial setup
Tinkerwell is an electron app and coderunner. It's easy to test snippets of code, work through problems, etc.
https://beyondco.de/licenses/tinkerwell
when you install tinkerwell, i want to show you how to use a cardano api with it

these are all laravel helpers and methods
http::get() = super easy to fetch remote apis with the http client
collect() = excellent way of handling arrays/objects without writing a bunch of similar code


--------------------------------------------------------------


